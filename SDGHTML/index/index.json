{"interfaceLanguages":{"swift":[{"children":[{"title":"Package","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/sdgweb","title":"SDGWeb","type":"article"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributedsyntax\/attributedictionary","title":"var attributeDictionary: [String : String]","type":"property"},{"path":"\/documentation\/sdghtml\/attributedsyntax\/classes","title":"var classes: [String]","type":"property"},{"path":"\/documentation\/sdghtml\/attributedsyntax\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/sdghtml\/attributedsyntax\/language","title":"var language: String?","type":"property"},{"path":"\/documentation\/sdghtml\/attributedsyntax\/textdirection","title":"var textDirection: String?","type":"property"},{"path":"\/documentation\/sdghtml\/attributedsyntax\/translationintent","title":"var translationIntent: Bool?","type":"property"},{"path":"\/documentation\/sdghtml\/attributedsyntax\/translationintentvalue","title":"var translationIntentValue: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributedsyntax\/apply(attribute:)","title":"func apply(attribute: AttributeSyntax)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdghtml\/attributedsyntax\/attribute(named:)-6mrd3","title":"func attribute<L>(named: UserFacing<StrictString, L>) -> AttributeSyntax?","type":"method"}],"title":"AttributedSyntax Implementations","type":"groupMarker"}],"path":"\/documentation\/sdghtml\/attributedsyntax\/attribute(named:)-8vkvj","title":"func attribute(named: String) -> AttributeSyntax?","type":"method"},{"path":"\/documentation\/sdghtml\/attributedsyntax\/removeattribute(named:)","title":"func removeAttribute(named: String)","type":"method"},{"path":"\/documentation\/sdghtml\/attributedsyntax\/set(attribute:to:)","title":"func set(attribute: String, to: String?)","type":"method"},{"path":"\/documentation\/sdghtml\/attributedsyntax\/valueofattribute(named:)","title":"func valueOfAttribute(named: String) -> String?","type":"method"}],"path":"\/documentation\/sdghtml\/attributedsyntax","title":"AttributedSyntax","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/containersyntax\/content","title":"var content: ListSyntax<ContentSyntax>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/containersyntax\/childelements()","title":"func childElements() -> AnyCollection<ElementSyntax>","type":"method"}],"path":"\/documentation\/sdghtml\/containersyntax","title":"ContainerSyntax","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/namedsyntax\/name","title":"var name: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/namedsyntax\/nametext","title":"var nameText: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/namedsyntax\/nametokenkind(_:)","title":"static func nameTokenKind(String) -> TokenKind","type":"method"}],"path":"\/documentation\/sdghtml\/namedsyntax","title":"NamedSyntax","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/syntax\/format()","title":"func format()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdghtml\/syntax\/format(indentationlevel:)-609zb","title":"func format(indentationLevel: Int)","type":"method"}],"title":"Syntax Implementations","type":"groupMarker"}],"path":"\/documentation\/sdghtml\/syntax\/format(indentationlevel:)-6jqrv","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/syntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdghtml\/syntax\/performsingleunfoldingpass(with:)-9vaja","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"}],"title":"Syntax Implementations","type":"groupMarker"}],"path":"\/documentation\/sdghtml\/syntax\/performsingleunfoldingpass(with:)-631cp","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/syntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/syntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/syntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/syntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/syntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/syntax","title":"Syntax","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntaxunfolderprotocol\/unfold(attribute:)","title":"func unfold(attribute: inout AttributeSyntax) throws","type":"method"},{"path":"\/documentation\/sdghtml\/syntaxunfolderprotocol\/unfold(contentlist:)","title":"func unfold(contentList: inout ListSyntax<ContentSyntax>) throws","type":"method"},{"path":"\/documentation\/sdghtml\/syntaxunfolderprotocol\/unfold(document:)","title":"func unfold(document: inout DocumentSyntax) throws","type":"method"},{"path":"\/documentation\/sdghtml\/syntaxunfolderprotocol\/unfold(element:)","title":"func unfold(element: inout ElementSyntax) throws","type":"method"}],"path":"\/documentation\/sdghtml\/syntaxunfolderprotocol","title":"SyntaxUnfolderProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributesyntax\/init(name:value:)-2yqrc","title":"init(name: TokenKind, value: String?)","type":"init"},{"path":"\/documentation\/sdghtml\/attributesyntax\/init(name:value:)-6fntl","title":"init(name: String, value: String?)","type":"init"},{"path":"\/documentation\/sdghtml\/attributesyntax\/init(whitespace:name:value:)","title":"init(whitespace: TokenSyntax, name: TokenSyntax, value: AttributeValueSyntax?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributesyntax\/name","title":"var name: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/attributesyntax\/value","title":"var value: AttributeValueSyntax?","type":"property"},{"path":"\/documentation\/sdghtml\/attributesyntax\/valuetext","title":"var valueText: String?","type":"property"},{"path":"\/documentation\/sdghtml\/attributesyntax\/whitespace","title":"var whitespace: TokenSyntax","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributesyntax\/format(indentationlevel:)-8n5zs","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/attributesyntax\/is(named:)","title":"func `is`<L>(named: UserFacing<StrictString, L>) -> Bool","type":"method"},{"path":"\/documentation\/sdghtml\/attributesyntax\/performsingleunfoldingpass(with:)-5aqc4","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributesyntax\/nametokenkind(_:)","title":"static func nameTokenKind(String) -> TokenKind","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributesyntax\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/attributesyntax\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributesyntax\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdghtml\/attributesyntax\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributesyntax\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/attributesyntax\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributesyntax\/nametext","title":"var nameText: String","type":"property"}],"path":"\/documentation\/sdghtml\/attributesyntax\/namedsyntax-implementations","title":"NamedSyntax Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributesyntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributesyntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/attributesyntax\/format()","title":"func format()","type":"method"},{"path":"\/documentation\/sdghtml\/attributesyntax\/format(indentationlevel:)-8vas8","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/attributesyntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/attributesyntax\/performsingleunfoldingpass(with:)-5ntjx","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/attributesyntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/attributesyntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/attributesyntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"}],"path":"\/documentation\/sdghtml\/attributesyntax\/syntax-implementations","title":"Syntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributesyntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/attributesyntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributesyntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/attributesyntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/attributesyntax","title":"AttributeSyntax","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/init(equals:openingquotationmark:value:closingquotationmark:)","title":"init(equals: TokenSyntax, openingQuotationMark: TokenSyntax, value: TokenSyntax, closingQuotationMark: TokenSyntax)","type":"init"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/init(value:)","title":"init(value: TokenKind?)","type":"init"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/init(valuetext:)","title":"init(valueText: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/closingquotationmark","title":"var closingQuotationMark: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/equals","title":"var equals: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/openingquotationmark","title":"var openingQuotationMark: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/value","title":"var value: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/valuetext","title":"var valueText: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/attributevaluesyntax\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdghtml\/attributevaluesyntax\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/attributevaluesyntax\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/format()","title":"func format()","type":"method"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/format(indentationlevel:)","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/performsingleunfoldingpass(with:)","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"}],"path":"\/documentation\/sdghtml\/attributevaluesyntax\/syntax-implementations","title":"Syntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/attributevaluesyntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributevaluesyntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/attributevaluesyntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/attributevaluesyntax","title":"AttributeValueSyntax","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributessyntax\/init()","title":"init()","type":"init"},{"path":"\/documentation\/sdghtml\/attributessyntax\/init(arrayliteral:)","title":"init(arrayLiteral: AttributeSyntax...)","type":"init"},{"path":"\/documentation\/sdghtml\/attributessyntax\/init(attributes:trailingwhitespace:)","title":"init(attributes: ListSyntax<AttributeSyntax>?, trailingWhitespace: TokenSyntax?)","type":"init"},{"path":"\/documentation\/sdghtml\/attributessyntax\/init(dictionary:)","title":"init?(dictionary: [String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributessyntax\/attributedictionary","title":"var attributeDictionary: [String : String]","type":"property"},{"path":"\/documentation\/sdghtml\/attributessyntax\/attributes","title":"var attributes: ListSyntax<AttributeSyntax>?","type":"property"},{"path":"\/documentation\/sdghtml\/attributessyntax\/trailingwhitespace","title":"var trailingWhitespace: TokenSyntax?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributessyntax\/apply(attribute:)","title":"func apply(attribute: AttributeSyntax)","type":"method"},{"path":"\/documentation\/sdghtml\/attributessyntax\/attribute(named:)","title":"func attribute(named: String) -> AttributeSyntax?","type":"method"},{"path":"\/documentation\/sdghtml\/attributessyntax\/format(indentationlevel:)-1zuli","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/attributessyntax\/removeattribute(named:)","title":"func removeAttribute(named: String)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributessyntax\/classes","title":"var classes: [String]","type":"property"},{"path":"\/documentation\/sdghtml\/attributessyntax\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/sdghtml\/attributessyntax\/language","title":"var language: String?","type":"property"},{"path":"\/documentation\/sdghtml\/attributessyntax\/textdirection","title":"var textDirection: String?","type":"property"},{"path":"\/documentation\/sdghtml\/attributessyntax\/translationintent","title":"var translationIntent: Bool?","type":"property"},{"path":"\/documentation\/sdghtml\/attributessyntax\/translationintentvalue","title":"var translationIntentValue: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributessyntax\/set(attribute:to:)","title":"func set(attribute: String, to: String?)","type":"method"},{"path":"\/documentation\/sdghtml\/attributessyntax\/valueofattribute(named:)","title":"func valueOfAttribute(named: String) -> String?","type":"method"}],"path":"\/documentation\/sdghtml\/attributessyntax\/attributedsyntax-implementations","title":"AttributedSyntax Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributessyntax\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/attributessyntax\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributessyntax\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdghtml\/attributessyntax\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributessyntax\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/attributessyntax\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributessyntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributessyntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/attributessyntax\/format()","title":"func format()","type":"method"},{"path":"\/documentation\/sdghtml\/attributessyntax\/format(indentationlevel:)-5ncob","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/attributessyntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/attributessyntax\/performsingleunfoldingpass(with:)","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/attributessyntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/attributessyntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/attributessyntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"}],"path":"\/documentation\/sdghtml\/attributessyntax\/syntax-implementations","title":"Syntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributessyntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/attributessyntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/attributessyntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/attributessyntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/attributessyntax","title":"AttributesSyntax","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/init(lessthan:slash:name:greaterthan:)","title":"init(lessThan: TokenSyntax, slash: TokenSyntax, name: TokenSyntax, greaterThan: TokenSyntax)","type":"init"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/init(name:)-3x199","title":"init(name: String)","type":"init"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/init(name:)-54lm6","title":"init(name: TokenKind)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/greaterthan","title":"var greaterThan: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/lessthan","title":"var lessThan: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/name","title":"var name: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/slash","title":"var slash: TokenSyntax","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/nametokenkind(_:)","title":"static func nameTokenKind(String) -> TokenKind","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/closingtagsyntax\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdghtml\/closingtagsyntax\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/closingtagsyntax\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/nametext","title":"var nameText: String","type":"property"}],"path":"\/documentation\/sdghtml\/closingtagsyntax\/namedsyntax-implementations","title":"NamedSyntax Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/format()","title":"func format()","type":"method"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/format(indentationlevel:)","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/performsingleunfoldingpass(with:)","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"}],"path":"\/documentation\/sdghtml\/closingtagsyntax\/syntax-implementations","title":"Syntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/closingtagsyntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/closingtagsyntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/closingtagsyntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/closingtagsyntax","title":"ClosingTagSyntax","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/commentsyntax\/init(openingtoken:contents:closingtoken:)","title":"init(openingToken: TokenSyntax, contents: TokenSyntax, closingToken: TokenSyntax)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/commentsyntax\/closingtoken","title":"var closingToken: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/commentsyntax\/contents","title":"var contents: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/commentsyntax\/openingtoken","title":"var openingToken: TokenSyntax","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/commentsyntax\/format(indentationlevel:)-9dhux","title":"func format(indentationLevel: Int)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/commentsyntax\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/commentsyntax\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/commentsyntax\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdghtml\/commentsyntax\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/commentsyntax\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/commentsyntax\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/commentsyntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/commentsyntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/commentsyntax\/format()","title":"func format()","type":"method"},{"path":"\/documentation\/sdghtml\/commentsyntax\/format(indentationlevel:)-4haji","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/commentsyntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/commentsyntax\/performsingleunfoldingpass(with:)","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/commentsyntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/commentsyntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/commentsyntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"}],"path":"\/documentation\/sdghtml\/commentsyntax\/syntax-implementations","title":"Syntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/commentsyntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/commentsyntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/commentsyntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/commentsyntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/commentsyntax","title":"CommentSyntax","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/contentsyntax\/init(kind:)","title":"init(kind: ContentSyntaxKind)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/contentsyntax\/kind","title":"var kind: ContentSyntaxKind","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/contentsyntax\/element(_:)","title":"static func element(ElementSyntax) -> ContentSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/contentsyntax\/text(_:)","title":"static func text(String) -> ContentSyntax","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/contentsyntax\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/contentsyntax\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/contentsyntax\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdghtml\/contentsyntax\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/contentsyntax\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/contentsyntax\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/contentsyntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/contentsyntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/contentsyntax\/format()","title":"func format()","type":"method"},{"path":"\/documentation\/sdghtml\/contentsyntax\/format(indentationlevel:)","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/contentsyntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/contentsyntax\/performsingleunfoldingpass(with:)","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/contentsyntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/contentsyntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/contentsyntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"}],"path":"\/documentation\/sdghtml\/contentsyntax\/syntax-implementations","title":"Syntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/contentsyntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/contentsyntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/contentsyntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/contentsyntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/contentsyntax","title":"ContentSyntax","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/==(_:_:)","title":"static func == (DocumentSyntax, DocumentSyntax) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/init(content:)","title":"init(content: ListSyntax<ContentSyntax>)","type":"init"},{"path":"\/documentation\/sdghtml\/documentsyntax\/init(file:origin:)","title":"init(file: Data, origin: URL?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/content","title":"var content: ListSyntax<ContentSyntax>","type":"property"},{"path":"\/documentation\/sdghtml\/documentsyntax\/file","title":"var file: Data","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/format(indentationlevel:)-7fg3a","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/documentsyntax\/performsingleunfoldingpass(with:)-4qlem","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/documentsyntax\/validate(baseurl:)","title":"func validate(baseURL: URL) -> [SyntaxError]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/document(documentelement:formatted:)","title":"static func document(documentElement: ElementSyntax, formatted: Bool) -> DocumentSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/documentsyntax\/parse(source:)","title":"static func parse(source: String) -> Result<DocumentSyntax, SyntaxError>","type":"method"},{"path":"\/documentation\/sdghtml\/documentsyntax\/redirect(language:target:)","title":"static func redirect<L>(language: L, target: URL) -> DocumentSyntax","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/childelements()","title":"func childElements() -> AnyCollection<ElementSyntax>","type":"method"}],"path":"\/documentation\/sdghtml\/documentsyntax\/containersyntax-implementations","title":"ContainerSyntax Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/documentsyntax\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdghtml\/documentsyntax\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/documentsyntax\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdghtml\/documentsyntax\/=_(_:_:)","title":"static func ≠ (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdghtml\/documentsyntax\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/init(from:)","title":"init(from: URL) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/save(to:)","title":"func save(to: URL) throws","type":"method"}],"path":"\/documentation\/sdghtml\/documentsyntax\/fileconvertible-implementations","title":"FileConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/documentsyntax\/format()","title":"func format()","type":"method"},{"path":"\/documentation\/sdghtml\/documentsyntax\/format(indentationlevel:)-4rz0r","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/documentsyntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/documentsyntax\/performsingleunfoldingpass(with:)-35jjo","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/documentsyntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/documentsyntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/documentsyntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"}],"path":"\/documentation\/sdghtml\/documentsyntax\/syntax-implementations","title":"Syntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/documentsyntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/documentsyntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/documentsyntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/documentsyntax","title":"DocumentSyntax","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/init(content:closingtag:)","title":"init(content: ListSyntax<ContentSyntax>, closingTag: ClosingTagSyntax)","type":"init"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/init(elementname:contents:)","title":"init(elementName: String, contents: ListSyntax<ContentSyntax>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/closingtag","title":"var closingTag: ClosingTagSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/content","title":"var content: ListSyntax<ContentSyntax>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/format(indentationlevel:)-3wti1","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/performsingleunfoldingpass(with:)-99ifp","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/childelements()","title":"func childElements() -> AnyCollection<ElementSyntax>","type":"method"}],"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/containersyntax-implementations","title":"ContainerSyntax Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/format()","title":"func format()","type":"method"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/format(indentationlevel:)-3tow1","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/performsingleunfoldingpass(with:)-9ed8p","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"}],"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/syntax-implementations","title":"Syntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/elementcontinuationsyntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/elementcontinuationsyntax","title":"ElementContinuationSyntax","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/init(name:attributes:contents:)","title":"init(name: String, attributes: [String : String], contents: ListSyntax<ContentSyntax>)","type":"init"},{"path":"\/documentation\/sdghtml\/elementsyntax\/init(name:attributes:empty:)","title":"init(name: String, attributes: [String : String], empty: Bool)","type":"init"},{"path":"\/documentation\/sdghtml\/elementsyntax\/init(openingtag:continuation:)","title":"init(openingTag: OpeningTagSyntax, continuation: ElementContinuationSyntax?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/attributedictionary","title":"var attributeDictionary: [String : String]","type":"property"},{"path":"\/documentation\/sdghtml\/elementsyntax\/content","title":"var content: ListSyntax<ContentSyntax>","type":"property"},{"path":"\/documentation\/sdghtml\/elementsyntax\/continuation","title":"var continuation: ElementContinuationSyntax?","type":"property"},{"path":"\/documentation\/sdghtml\/elementsyntax\/name","title":"var name: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/elementsyntax\/openingtag","title":"var openingTag: OpeningTagSyntax","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/apply(attribute:)","title":"func apply(attribute: AttributeSyntax)","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/attribute(named:)","title":"func attribute(named: String) -> AttributeSyntax?","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/performsingleunfoldingpass(with:)-6vr74","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/removeattribute(named:)","title":"func removeAttribute(named: String)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/article(attributes:contents:)","title":"static func article(attributes: [String : String], contents: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/author(_:language:attributes:)","title":"static func author<L>(String, language: L, attributes: [String : String]) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/body(attributes:contents:)","title":"static func body(attributes: [String : String], contents: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/canonical(url:attributes:)","title":"static func canonical(url: URL, attributes: [String : String]) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/css(url:attributes:)","title":"static func css(url: URL, attributes: [String : String]) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/description(_:attributes:)","title":"static func description(String, attributes: [String : String]) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/division(attributes:contents:)","title":"static func division(attributes: [String : String], contents: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/document(language:attributes:header:body:)","title":"static func document<L>(language: L, attributes: [String : String], header: ElementSyntax, body: ElementSyntax) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/documenttypedeclaration()","title":"static func documentTypeDeclaration() -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/encoding(_:attributes:)","title":"static func encoding(String, attributes: [String : String]) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/footer(attributes:contents:)","title":"static func footer(attributes: [String : String], contents: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/foreigntext(language:attributes:contents:)","title":"static func foreignText<L>(language: L, attributes: [String : String], contents: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/header(attributes:contents:)","title":"static func header(attributes: [String : String], contents: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/heading(level:attributes:contents:)","title":"static func heading(level: HeadingLevel, attributes: [String : String], contents: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/keywords(_:attributes:)","title":"static func keywords([String], attributes: [String : String]) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/languageswitch(attributes:targeturl:)","title":"static func languageSwitch<L>(attributes: [String : String], targetURL: UserFacing<URL, L>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/linebreak(attributes:)","title":"static func lineBreak(attributes: [String : String]) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/link(target:language:attributes:contents:)","title":"static func link<L>(target: URL, language: L, attributes: [String : String], contents: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/metadata(attributes:)","title":"static func metadata(attributes: [String : String]) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/metadata(value:for:attributes:)","title":"static func metadata(value: String, for: String, attributes: [String : String]) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/metadataheader(attributes:encoding:title:canonicalurl:author:description:keywords:css:additionalchildren:)","title":"static func metadataHeader(attributes: [String : String], encoding: ElementSyntax, title: ElementSyntax, canonicalURL: ElementSyntax, author: ElementSyntax, description: ElementSyntax, keywords: ElementSyntax, css: [ElementSyntax], additionalChildren: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/metadatatitle(attributes:_:)","title":"static func metadataTitle(attributes: [String : String], String) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/nametokenkind(_:)","title":"static func nameTokenKind(String) -> TokenKind","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/navigation(attributes:contents:)","title":"static func navigation(attributes: [String : String], contents: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/object(attributes:fallbackrepresentation:)","title":"static func object(attributes: [String : String], fallbackRepresentation: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/paragraph(attributes:contents:)","title":"static func paragraph(attributes: [String : String], contents: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/portabledocument(url:attributes:fallbackrepresentation:)","title":"static func portableDocument(url: URL, attributes: [String : String], fallbackRepresentation: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/redirect(target:attributes:)","title":"static func redirect(target: URL, attributes: [String : String]) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/section(attributes:contents:)","title":"static func section(attributes: [String : String], contents: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/span(attributes:contents:)","title":"static func span(attributes: [String : String], contents: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/title(attributes:contents:)","title":"static func title(attributes: [String : String], contents: ListSyntax<ContentSyntax>) -> ElementSyntax","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/classes","title":"var classes: [String]","type":"property"},{"path":"\/documentation\/sdghtml\/elementsyntax\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/sdghtml\/elementsyntax\/language","title":"var language: String?","type":"property"},{"path":"\/documentation\/sdghtml\/elementsyntax\/textdirection","title":"var textDirection: String?","type":"property"},{"path":"\/documentation\/sdghtml\/elementsyntax\/translationintent","title":"var translationIntent: Bool?","type":"property"},{"path":"\/documentation\/sdghtml\/elementsyntax\/translationintentvalue","title":"var translationIntentValue: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/set(attribute:to:)","title":"func set(attribute: String, to: String?)","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/valueofattribute(named:)","title":"func valueOfAttribute(named: String) -> String?","type":"method"}],"path":"\/documentation\/sdghtml\/elementsyntax\/attributedsyntax-implementations","title":"AttributedSyntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/childelements()","title":"func childElements() -> AnyCollection<ElementSyntax>","type":"method"}],"path":"\/documentation\/sdghtml\/elementsyntax\/containersyntax-implementations","title":"ContainerSyntax Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/elementsyntax\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdghtml\/elementsyntax\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/elementsyntax\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/nametext","title":"var nameText: String","type":"property"}],"path":"\/documentation\/sdghtml\/elementsyntax\/namedsyntax-implementations","title":"NamedSyntax Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/format()","title":"func format()","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/format(indentationlevel:)","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/performsingleunfoldingpass(with:)-57fo8","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/elementsyntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"}],"path":"\/documentation\/sdghtml\/elementsyntax\/syntax-implementations","title":"Syntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/elementsyntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/elementsyntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/elementsyntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/elementsyntax","title":"ElementSyntax","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/init()","title":"init()","type":"init"},{"path":"\/documentation\/sdghtml\/listsyntax\/init(dictionary:)","title":"init?(dictionary: [String : String])","type":"init"},{"path":"\/documentation\/sdghtml\/listsyntax\/init(entries:)","title":"init(entries: [Entry])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/endindex","title":"var endIndex: ListSyntax<Entry>.Index","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/startindex","title":"var startIndex: ListSyntax<Entry>.Index","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/index(_:offsetby:)","title":"func index(ListSyntax<Entry>.Index, offsetBy: Int) -> ListSyntax<Entry>.Index","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/index(after:)","title":"func index(after: ListSyntax<Entry>.Index) -> ListSyntax<Entry>.Index","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/index(before:)","title":"func index(before: ListSyntax<Entry>.Index) -> ListSyntax<Entry>.Index","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/replacesubrange(_:with:)-40kvl","title":"func replaceSubrange<S>(Range<ListSyntax<Entry>.Index>, with: S)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/subscript(_:)-7sxvx","title":"subscript(ListSyntax<Entry>.Index) -> Entry","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/index","title":"ListSyntax.Index","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/attributedictionary","title":"var attributeDictionary: [String : String]","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/classes","title":"var classes: [String]","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/language","title":"var language: String?","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/textdirection","title":"var textDirection: String?","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/translationintent","title":"var translationIntent: Bool?","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/translationintentvalue","title":"var translationIntentValue: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/apply(attribute:)","title":"func apply(attribute: AttributeSyntax)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/attribute(named:)-4pj6o","title":"func attribute(named: String) -> AttributeSyntax?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/attribute(named:)-9a04f","title":"func attribute<L>(named: UserFacing<StrictString, L>) -> AttributeSyntax?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/removeattribute(named:)","title":"func removeAttribute(named: String)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/set(attribute:to:)","title":"func set(attribute: String, to: String?)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/valueofattribute(named:)","title":"func valueOfAttribute(named: String) -> String?","type":"method"}],"path":"\/documentation\/sdghtml\/listsyntax\/attributedsyntax-implementations","title":"AttributedSyntax Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/backward(_:)","title":"func backward<R>(R) -> Range<ReversedCollection<Self>.Index>","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/firstrange(of:)-7qcsr","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/forward(_:)","title":"func forward<R>(R) -> Range<Self.Index>","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/joined(separator:)-7qmol","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/shimmeddifference(from:)","title":"func shimmedDifference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/shimmeddifference(from:by:)","title":"func shimmedDifference<C>(from: C, by: (Self.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/sdghtml\/listsyntax\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/bijectiveindexmapping","title":"var bijectiveIndexMapping: BijectiveMapping<Self.Index, Self.Element>","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/bounds","title":"var bounds: Range<Self.Index>","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/indexmapping","title":"var indexMapping: [Self.Index : Self.Element]","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/ismultiline","title":"var isMultiline: Bool","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/underestimatedcount-1gwez","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/contains(_:)-50ser","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/firstrange(of:)-5j6hz","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/joined(separator:)-7nsmg","title":"func joined(separator: Self.Element) -> Self.Element","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/map(_:)-3709s","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/ranges(separatedby:)","title":"func ranges(separatedBy: [Range<Self.Index>]) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/split(separator:maxsplits:omittingemptysubsequences:)-6rpuh","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/split(separator:maxsplits:omittingemptysubsequences:)-fvb3","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/subscript(_:)-2ulbp","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdghtml\/listsyntax\/subscript(_:)-373pt","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdghtml\/listsyntax\/subscript(_:)-6r6kn","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"}],"path":"\/documentation\/sdghtml\/listsyntax\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/listsyntax\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdghtml\/listsyntax\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/listsyntax\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/partition(by:)-5d5hw","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/partition(by:)-6mby","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/shuffle()-2n8cw","title":"func shuffle()","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/shuffle(using:)-29gx7","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/subscript(_:)-3x8in","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdghtml\/listsyntax\/subscript(_:)-76xi0","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdghtml\/listsyntax\/subscript(_:)-7njpe","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/sdghtml\/listsyntax\/subscript(_:)-8h1vk","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/sdghtml\/listsyntax\/subscript(_:)-m5pn","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/sdghtml\/listsyntax\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/sdghtml\/listsyntax\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/+(_:_:)-36yg6","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/sdghtml\/listsyntax\/+(_:_:)-6c712","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/sdghtml\/listsyntax\/+(_:_:)-6kcoi","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/sdghtml\/listsyntax\/+=(_:_:)","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/sdghtml\/listsyntax\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"path":"\/documentation\/sdghtml\/listsyntax\/init(repeating:count:)","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/append(_:)","title":"func append(Self.Element)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/append(contentsof:)-2ier3","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/append(contentsof:)-8s7ht","title":"func append(contentsOf: Self)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/appending(_:)","title":"func appending(Self.Element) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/appending(contentsof:)","title":"func appending(contentsOf: Self) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/applying(changes:)","title":"func applying(changes: CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/fill(to:with:from:)","title":"func fill(to: Int, with: Self.Element, from: FillDirection)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/filled(to:with:from:)","title":"func filled(to: Int, with: Self.Element, from: FillDirection) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/insert(_:at:)","title":"func insert(Self.Element, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/insert(contentsof:at:)-25a3p","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/insert(contentsof:at:)-56o4v","title":"func insert(contentsOf: Self, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/prepend(_:)","title":"func prepend(Self.Element)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/prepend(contentsof:)-2nidx","title":"func prepend(contentsOf: Self)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/prepend(contentsof:)-95djy","title":"func prepend<C>(contentsOf: C)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/prepending(_:)","title":"func prepending(Self.Element) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/prepending(contentsof:)","title":"func prepending(contentsOf: Self) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/remove(at:)","title":"func remove(at: Self.Index) -> Self.Element","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/removeall(where:)-2r3wm","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/removeall(where:)-61qpv","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/removefirst()","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/removelast()","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/removesubrange(_:)-4pf5g","title":"func removeSubrange(Range<Self.Index>)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/removesubrange(_:)-7ayt0","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/replace(_:with:maxreplacements:)","title":"func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/replacesubrange(_:with:)-18esb","title":"func replaceSubrange<R>(R, with: Self)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/replacesubrange(_:with:)-3zh2h","title":"func replaceSubrange(Range<Self.Index>, with: Self)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/replacesubrange(_:with:)-7h4de","title":"func replaceSubrange<C>(Range<Self.Index>, with: C)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/replacesubrange(_:with:)-8y5ci","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/replacing(_:with:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/replacing(_:with:subrange:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/shuffle()-3k9n8","title":"func shuffle()","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/shuffle(using:)-11mrg","title":"func shuffle<R>(using: inout R)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/truncate(at:)","title":"func truncate(at: Self.Index)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/truncated(at:)","title":"func truncated(at: Self.Index) -> Self","type":"method"}],"path":"\/documentation\/sdghtml\/listsyntax\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/_(_:)-4hnj","title":"static func ∑ (Self) -> Self.Element","type":"op"},{"path":"\/documentation\/sdghtml\/listsyntax\/_(_:)-4mn8l","title":"static func ∏ (Self) -> Self.Element","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/sdghtml\/listsyntax\/underestimatedcount-4jxb4","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/contains(_:)-jz6f","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/countedset()","title":"func countedSet() -> [Self.Element : Int]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/flatmap(_:)-1hojc","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/flatmap(_:)-6iavu","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/joined(separator:)-7wx83","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/joined(separator:)-ac3u","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/map(_:)-7j045","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/mean()","title":"func mean() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/median()","title":"func median() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/split(separator:maxsplits:omittingemptysubsequences:)-1c6rc","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/statisticalmodes()","title":"func statisticalModes() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/sdghtml\/listsyntax\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/format()","title":"func format()","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/format(indentationlevel:)","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/performsingleunfoldingpass(with:)","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/listsyntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"}],"path":"\/documentation\/sdghtml\/listsyntax\/syntax-implementations","title":"Syntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/listsyntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/listsyntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/listsyntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/listsyntax","title":"ListSyntax","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/init(lessthan:name:attributes:greaterthan:)","title":"init(lessThan: TokenSyntax, name: TokenSyntax, attributes: AttributesSyntax?, greaterThan: TokenSyntax)","type":"init"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/init(name:attributes:)-7ctn","title":"init(name: TokenKind, attributes: AttributesSyntax?)","type":"init"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/init(name:attributes:)-9ivwj","title":"init(name: String, attributes: [String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/attributedictionary","title":"var attributeDictionary: [String : String]","type":"property"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/attributes","title":"var attributes: AttributesSyntax?","type":"property"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/greaterthan","title":"var greaterThan: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/lessthan","title":"var lessThan: TokenSyntax","type":"property"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/name","title":"var name: TokenSyntax","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/apply(attribute:)","title":"func apply(attribute: AttributeSyntax)","type":"method"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/attribute(named:)","title":"func attribute(named: String) -> AttributeSyntax?","type":"method"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/removeattribute(named:)","title":"func removeAttribute(named: String)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/nametokenkind(_:)","title":"static func nameTokenKind(String) -> TokenKind","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/classes","title":"var classes: [String]","type":"property"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/language","title":"var language: String?","type":"property"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/textdirection","title":"var textDirection: String?","type":"property"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/translationintent","title":"var translationIntent: Bool?","type":"property"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/translationintentvalue","title":"var translationIntentValue: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/set(attribute:to:)","title":"func set(attribute: String, to: String?)","type":"method"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/valueofattribute(named:)","title":"func valueOfAttribute(named: String) -> String?","type":"method"}],"path":"\/documentation\/sdghtml\/openingtagsyntax\/attributedsyntax-implementations","title":"AttributedSyntax Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/openingtagsyntax\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdghtml\/openingtagsyntax\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/openingtagsyntax\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/nametext","title":"var nameText: String","type":"property"}],"path":"\/documentation\/sdghtml\/openingtagsyntax\/namedsyntax-implementations","title":"NamedSyntax Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/format()","title":"func format()","type":"method"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/format(indentationlevel:)","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/performsingleunfoldingpass(with:)","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"}],"path":"\/documentation\/sdghtml\/openingtagsyntax\/syntax-implementations","title":"Syntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/openingtagsyntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/openingtagsyntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/openingtagsyntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/openingtagsyntax","title":"OpeningTagSyntax","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntaxerror\/init(file:index:description:context:)","title":"init<L>(file: String, index: String.ScalarView.Index, description: UserFacing<StrictString, L>, context: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntaxerror\/presentabledescription()","title":"func presentableDescription() -> StrictString","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntaxerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/syntaxerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntaxerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/syntaxerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntaxerror\/errordescription-3chdw","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/sdghtml\/syntaxerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/sdghtml\/syntaxerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/sdghtml\/syntaxerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/sdghtml\/syntaxerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntaxerror\/errordescription-9jmyh","title":"var errorDescription: String?","type":"property"}],"path":"\/documentation\/sdghtml\/syntaxerror\/presentableerror-implementations","title":"PresentableError Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/syntaxerror","title":"SyntaxError","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntaxunfolder\/context\/init(localization:siteroot:relativepath:title:author:css:)","title":"init<L>(localization: L?, siteRoot: URL?, relativePath: String?, title: StrictString?, author: ElementSyntax?, css: [String])","type":"init"}],"path":"\/documentation\/sdghtml\/syntaxunfolder\/context","title":"SyntaxUnfolder.Context","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntaxunfolder\/init(context:)","title":"init(context: SyntaxUnfolder.Context?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntaxunfolder\/unfold(attribute:)","title":"func unfold(attribute: inout AttributeSyntax) throws","type":"method"},{"path":"\/documentation\/sdghtml\/syntaxunfolder\/unfold(contentlist:)","title":"func unfold(contentList: inout ListSyntax<ContentSyntax>) throws","type":"method"},{"path":"\/documentation\/sdghtml\/syntaxunfolder\/unfold(document:)","title":"func unfold(document: inout DocumentSyntax) throws","type":"method"},{"path":"\/documentation\/sdghtml\/syntaxunfolder\/unfold(element:)","title":"func unfold(element: inout ElementSyntax) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/syntaxunfolder\/cleanuplanguages(_:)","title":"static func cleanUpLanguages(inout DocumentSyntax)","type":"method"},{"path":"\/documentation\/sdghtml\/syntaxunfolder\/unfoldforeign(_:)","title":"static func unfoldForeign(inout ElementSyntax)","type":"method"},{"path":"\/documentation\/sdghtml\/syntaxunfolder\/unfoldlocalized(_:localization:)","title":"static func unfoldLocalized<L>(inout ListSyntax<ContentSyntax>, localization: L) throws","type":"method"},{"path":"\/documentation\/sdghtml\/syntaxunfolder\/unfoldpage(_:localization:siteroot:relativepath:author:css:)","title":"static func unfoldPage<L>(inout ListSyntax<ContentSyntax>, localization: L, siteRoot: URL, relativePath: String, author: ElementSyntax, css: [String]) throws","type":"method"},{"path":"\/documentation\/sdghtml\/syntaxunfolder\/unfoldpagetitle(_:title:)","title":"static func unfoldPageTitle(inout ListSyntax<ContentSyntax>, title: StrictString)","type":"method"},{"path":"\/documentation\/sdghtml\/syntaxunfolder\/unfoldsiteurlattribute(_:relativepath:)","title":"static func unfoldSiteURLAttribute(inout AttributeSyntax, relativePath: String)","type":"method"}],"path":"\/documentation\/sdghtml\/syntaxunfolder","title":"SyntaxUnfolder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/textsyntax\/init(text:)-2pa96","title":"init(text: String)","type":"init"},{"path":"\/documentation\/sdghtml\/textsyntax\/init(text:)-szue","title":"init(text: TokenSyntax)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/textsyntax\/text","title":"var text: TokenSyntax","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/textsyntax\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/textsyntax\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/textsyntax\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdghtml\/textsyntax\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/textsyntax\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/textsyntax\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/textsyntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/textsyntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/textsyntax\/format()","title":"func format()","type":"method"},{"path":"\/documentation\/sdghtml\/textsyntax\/format(indentationlevel:)","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/textsyntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/textsyntax\/performsingleunfoldingpass(with:)","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/textsyntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/textsyntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/textsyntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"}],"path":"\/documentation\/sdghtml\/textsyntax\/syntax-implementations","title":"Syntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/textsyntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/textsyntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/textsyntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/textsyntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/textsyntax","title":"TextSyntax","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/tokensyntax\/init(kind:)","title":"init(kind: TokenKind)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/tokensyntax\/tokenkind","title":"var tokenKind: TokenKind","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/tokensyntax\/format(indentationlevel:)-24kqt","title":"func format(indentationLevel: Int)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/tokensyntax\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/tokensyntax\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/tokensyntax\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdghtml\/tokensyntax\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/tokensyntax\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/tokensyntax\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/tokensyntax\/children","title":"var children: [Syntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/tokensyntax\/descendents()","title":"func descendents() -> [Syntax]","type":"method"},{"path":"\/documentation\/sdghtml\/tokensyntax\/format()","title":"func format()","type":"method"},{"path":"\/documentation\/sdghtml\/tokensyntax\/format(indentationlevel:)-2rzcs","title":"func format(indentationLevel: Int)","type":"method"},{"path":"\/documentation\/sdghtml\/tokensyntax\/formatted(indentationlevel:)","title":"func formatted(indentationLevel: Int) -> Self","type":"method"},{"path":"\/documentation\/sdghtml\/tokensyntax\/performsingleunfoldingpass(with:)","title":"func performSingleUnfoldingPass<Unfolder>(with: Unfolder) throws","type":"method"},{"path":"\/documentation\/sdghtml\/tokensyntax\/source()","title":"func source() -> String","type":"method"},{"path":"\/documentation\/sdghtml\/tokensyntax\/unfold()","title":"func unfold() throws","type":"method"},{"path":"\/documentation\/sdghtml\/tokensyntax\/unfold(with:)","title":"func unfold<Unfolder>(with: Unfolder) throws","type":"method"}],"path":"\/documentation\/sdghtml\/tokensyntax\/syntax-implementations","title":"Syntax Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/tokensyntax\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"}],"path":"\/documentation\/sdghtml\/tokensyntax\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/tokensyntax\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"}],"path":"\/documentation\/sdghtml\/tokensyntax\/transparentwrapper-implementations","title":"TransparentWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/tokensyntax","title":"TokenSyntax","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/unfoldingerror\/init(description:node:)","title":"init<L>(description: UserFacing<StrictString, L>, node: Syntax)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/unfoldingerror\/syntaxnode","title":"let syntaxNode: Syntax","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/unfoldingerror\/presentabledescription()","title":"func presentableDescription() -> StrictString","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/unfoldingerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdghtml\/unfoldingerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/unfoldingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sdghtml\/unfoldingerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/unfoldingerror\/errordescription-1dp7x","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/sdghtml\/unfoldingerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/sdghtml\/unfoldingerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/sdghtml\/unfoldingerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/sdghtml\/unfoldingerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/unfoldingerror\/errordescription-3tw7j","title":"var errorDescription: String?","type":"property"}],"path":"\/documentation\/sdghtml\/unfoldingerror\/presentableerror-implementations","title":"PresentableError Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/unfoldingerror","title":"UnfoldingError","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/contentsyntaxkind\/comment(_:)","title":"case comment(CommentSyntax)","type":"case"},{"path":"\/documentation\/sdghtml\/contentsyntaxkind\/element(_:)","title":"case element(ElementSyntax)","type":"case"},{"path":"\/documentation\/sdghtml\/contentsyntaxkind\/text(_:)","title":"case text(TextSyntax)","type":"case"}],"path":"\/documentation\/sdghtml\/contentsyntaxkind","title":"ContentSyntaxKind","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/html\/escapetextforattribute(_:)","title":"static func escapeTextForAttribute<S>(S) -> S","type":"method"},{"path":"\/documentation\/sdghtml\/html\/escapetextforcharacterdata(_:)","title":"static func escapeTextForCharacterData<S>(S) -> S","type":"method"},{"path":"\/documentation\/sdghtml\/html\/percentencodeurlpath(_:)","title":"static func percentEncodeURLPath<S>(S) -> S","type":"method"}],"path":"\/documentation\/sdghtml\/html","title":"HTML","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/headinglevel\/level1","title":"case level1","type":"case"},{"path":"\/documentation\/sdghtml\/headinglevel\/level2","title":"case level2","type":"case"},{"path":"\/documentation\/sdghtml\/headinglevel\/level3","title":"case level3","type":"case"},{"path":"\/documentation\/sdghtml\/headinglevel\/level4","title":"case level4","type":"case"},{"path":"\/documentation\/sdghtml\/headinglevel\/level5","title":"case level5","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/headinglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdghtml\/headinglevel\/=_(_:_:)","title":"static func ≠ (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdghtml\/headinglevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/headinglevel","title":"HeadingLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/tokenkind\/attributename(_:)","title":"case attributeName(String)","type":"case"},{"path":"\/documentation\/sdghtml\/tokenkind\/attributetext(_:)","title":"case attributeText(String)","type":"case"},{"path":"\/documentation\/sdghtml\/tokenkind\/commentend","title":"case commentEnd","type":"case"},{"path":"\/documentation\/sdghtml\/tokenkind\/commentstart","title":"case commentStart","type":"case"},{"path":"\/documentation\/sdghtml\/tokenkind\/commenttext(_:)","title":"case commentText(String)","type":"case"},{"path":"\/documentation\/sdghtml\/tokenkind\/elementname(_:)","title":"case elementName(String)","type":"case"},{"path":"\/documentation\/sdghtml\/tokenkind\/equalssign","title":"case equalsSign","type":"case"},{"path":"\/documentation\/sdghtml\/tokenkind\/greaterthan","title":"case greaterThan","type":"case"},{"path":"\/documentation\/sdghtml\/tokenkind\/lessthan","title":"case lessThan","type":"case"},{"path":"\/documentation\/sdghtml\/tokenkind\/quotationmark","title":"case quotationMark","type":"case"},{"path":"\/documentation\/sdghtml\/tokenkind\/slash","title":"case slash","type":"case"},{"path":"\/documentation\/sdghtml\/tokenkind\/text(_:)","title":"case text(String)","type":"case"},{"path":"\/documentation\/sdghtml\/tokenkind\/whitespace(_:)","title":"case whitespace(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/tokenkind\/text","title":"var text: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdghtml\/tokenkind\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdghtml\/tokenkind\/=_(_:_:)","title":"static func ≠ (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdghtml\/tokenkind\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sdghtml\/tokenkind","title":"TokenKind","type":"enum"}],"path":"\/documentation\/sdghtml","title":"SDGHTML","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}