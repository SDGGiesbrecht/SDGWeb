{"metadata":{"extendedModule":"SDGHTML","externalID":"s:7SDGHTML6SyntaxPAAE6unfoldyyKF::SYNTHESIZED::s:7SDGHTML10ListSyntaxV","role":"symbol","modules":[{"name":"SDGHTML"}],"roleHeading":"Instance Method","title":"unfold()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unfold","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SDGHTML\/documentation\/SDGHTML\/ListSyntax\/unfold()"},"hierarchy":{"paths":[["doc:\/\/SDGHTML\/documentation\/SDGHTML","doc:\/\/SDGHTML\/documentation\/SDGHTML\/ListSyntax","doc:\/\/SDGHTML\/documentation\/SDGHTML\/ListSyntax\/Syntax-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unfold"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"The default syntax unfolder lacks any context information and thus will not unfold elements like ","type":"text"},{"type":"codeVoice","code":"<page>"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"<localized>"},{"text":". See ","type":"text"},{"type":"codeVoice","code":"SyntaxUnfolder.init(context:)"},{"text":" for more information.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sdghtml\/listsyntax\/unfold()"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Recursively unfolds any custom pseudo‐elements in the node’s contents toward standard HTML using the default syntax unfolder.","type":"text"}],"references":{"doc://SDGHTML/documentation/SDGHTML/ListSyntax/Syntax-Implementations":{"identifier":"doc:\/\/SDGHTML\/documentation\/SDGHTML\/ListSyntax\/Syntax-Implementations","kind":"article","type":"topic","abstract":[],"url":"\/documentation\/sdghtml\/listsyntax\/syntax-implementations","title":"Syntax Implementations","role":"collectionGroup"},"doc://SDGHTML/documentation/SDGHTML/ListSyntax":{"url":"\/documentation\/sdghtml\/listsyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"ListSyntax"}],"abstract":[{"text":"A node representing a consecutive list of other nodes.","type":"text"}],"title":"ListSyntax","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/SDGHTML\/documentation\/SDGHTML\/ListSyntax"},"doc://SDGHTML/documentation/SDGHTML/ListSyntax/unfold()":{"url":"\/documentation\/sdghtml\/listsyntax\/unfold()","title":"unfold()","identifier":"doc:\/\/SDGHTML\/documentation\/SDGHTML\/ListSyntax\/unfold()","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unfold"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"abstract":[{"text":"Recursively unfolds any custom pseudo‐elements in the node’s contents toward standard HTML using the default syntax unfolder.","type":"text"}]},"doc://SDGHTML/documentation/SDGHTML":{"kind":"symbol","title":"SDGHTML","role":"collection","url":"\/documentation\/sdghtml","abstract":[{"type":"text","text":"General utilities for working with HTML source."}],"identifier":"doc:\/\/SDGHTML\/documentation\/SDGHTML","type":"topic"}}}